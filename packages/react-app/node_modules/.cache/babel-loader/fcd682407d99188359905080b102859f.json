{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nexport function BlockNumbersProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const networks = useReadonlyNetworks();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n  useEffect(() => {\n    const onUnmount = Object.entries(networks).map(_ref2 => {\n      let [chainId, provider] = _ref2;\n      return subscribeToNewBlock(provider, Number(chainId), dispatch);\n    });\n    return () => {\n      onUnmount.forEach(fn => fn());\n    };\n  }, [networks]);\n  const debouncedState = useDebounce(state, 100);\n  return _jsx(BlockNumbersContext.Provider, {\n    value: debouncedState,\n    children: children\n  });\n}","map":{"version":3,"sources":["../../../../../../src/providers/blockNumber/blockNumbers/provider.tsx"],"names":[],"mappings":";AAAA,SAAoB,SAApB,EAA+B,UAA/B,QAAiD,OAAjD;AACA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,mBAAT,QAAoC,eAApC;AACA,SAAS,mBAAT,QAAoC,WAApC;AACA,SAAS,kBAAT,QAAmC,mBAAnC;AACA,SAAS,mBAAT,QAAoC,+BAApC;AAMA,OAAM,SAAU,oBAAV,OAAkD;AAAA,MAAnB;AAAE,IAAA;AAAF,GAAmB;AACtD,QAAM,QAAQ,GAAG,mBAAmB,EAApC;AACA,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,UAAU,CAAC,kBAAD,EAAqB,EAArB,CAApC;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,UAAM,SAAS,GAAG,MAAM,CAAC,OAAP,CAAe,QAAf,EAAyB,GAAzB,CAA6B;AAAA,UAAC,CAAC,OAAD,EAAU,QAAV,CAAD;AAAA,aAC7C,mBAAmB,CAAC,QAAD,EAAW,MAAM,CAAC,OAAD,CAAjB,EAA4B,QAA5B,CAD0B;AAAA,KAA7B,CAAlB;AAIA,WAAO,MAAK;AACV,MAAA,SAAS,CAAC,OAAV,CAAmB,EAAD,IAAQ,EAAE,EAA5B;AACD,KAFD;AAGD,GARQ,EAQN,CAAC,QAAD,CARM,CAAT;AAUA,QAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,GAAR,CAAlC;AAEA,SAAO,IAAA,CAAC,mBAAmB,CAAC,QAArB,EAA6B;AAAC,IAAA,KAAK,EAAE,cAAR;AAAwB,IAAA,QAAQ,EAAE;AAAlC,GAA7B,CAAP;AACD","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nexport function BlockNumbersProvider({ children }) {\n    const networks = useReadonlyNetworks();\n    const [state, dispatch] = useReducer(blockNumberReducer, {});\n    useEffect(() => {\n        const onUnmount = Object.entries(networks).map(([chainId, provider]) => subscribeToNewBlock(provider, Number(chainId), dispatch));\n        return () => {\n            onUnmount.forEach((fn) => fn());\n        };\n    }, [networks]);\n    const debouncedState = useDebounce(state, 100);\n    return _jsx(BlockNumbersContext.Provider, { value: debouncedState, children: children });\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}