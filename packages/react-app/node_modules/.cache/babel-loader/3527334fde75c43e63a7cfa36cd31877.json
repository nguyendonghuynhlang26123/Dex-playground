{"ast":null,"code":"var _jsxFileName = \"/mnt/STUDY/HOC/Thesis/playground/dex/packages/react-app/src/components/common/TransactionButton/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TransactionButton = _ref => {\n  _s();\n\n  let {\n    onClick,\n    label,\n    className,\n    state\n  } = _ref;\n  const [rendered, setRendered] = useState();\n  useEffect(() => {\n    if (!state || state.status === 'None') return;\n    if (state.status === 'PendingSignature') setRendered(loadingBtn('Pending'));else if (state.status === 'Mining') setRendered(loadingBtn('Mining'));else if (state.status === 'Success') setRendered(normalButton());\n  }, [state]);\n  useEffect(() => {\n    setRendered(normalButton());\n  }, []);\n\n  const loadingBtn = content => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `bg-blue-500 text-white hover:bg-blue-300 rounded px-2 py-1.5 opacity-30 ${className}`,\n    disabled: true,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      class: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      fill: \"none\",\n      viewBox: \"0 0 24 24\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        class: \"opacity-25\",\n        cx: \"12\",\n        cy: \"12\",\n        r: \"10\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        class: \"opacity-75\",\n        fill: \"currentColor\",\n        d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n\n  const normalButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `bg-blue-500 text-white hover:bg-blue-300 rounded px-2 py-1.5 ${className}`,\n      onClick: onClick,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: rendered\n  }, void 0, false);\n};\n\n_s(TransactionButton, \"ejKicn3UnOlt/r7S1VGmReUQgnY=\");\n\n_c = TransactionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionButton\");","map":{"version":3,"sources":["/mnt/STUDY/HOC/Thesis/playground/dex/packages/react-app/src/components/common/TransactionButton/index.jsx"],"names":["React","useEffect","useState","TransactionButton","onClick","label","className","state","rendered","setRendered","status","loadingBtn","normalButton","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,GAAyC;AACzE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,KAAD,IAAUA,KAAK,CAACG,MAAN,KAAiB,MAA/B,EAAuC;AACvC,QAAIH,KAAK,CAACG,MAAN,KAAiB,kBAArB,EAAyCD,WAAW,CAACE,UAAU,CAAC,SAAD,CAAX,CAAX,CAAzC,KACK,IAAIJ,KAAK,CAACG,MAAN,KAAiB,QAArB,EAA+BD,WAAW,CAACE,UAAU,CAAC,QAAD,CAAX,CAAX,CAA/B,KACA,IAAIJ,KAAK,CAACG,MAAN,KAAiB,SAArB,EAAgCD,WAAW,CAACG,YAAY,EAAb,CAAX;AACtC,GALQ,EAKN,CAACL,KAAD,CALM,CAAT;AAOAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW,CAACG,YAAY,EAAb,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMD,UAAU,GAAIE,OAAD,iBACjB;AAAQ,IAAA,SAAS,EAAG,2EAA0EP,SAAU,EAAxG;AAA2G,IAAA,QAAQ,MAAnH;AAAA,4BACE;AACE,MAAA,KAAK,EAAC,4CADR;AAEE,MAAA,KAAK,EAAC,4BAFR;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,OAAO,EAAC,WAJV;AAAA,8BAME;AAAQ,QAAA,KAAK,EAAC,YAAd;AAA2B,QAAA,EAAE,EAAC,IAA9B;AAAmC,QAAA,EAAE,EAAC,IAAtC;AAA2C,QAAA,CAAC,EAAC,IAA7C;AAAkD,QAAA,MAAM,EAAC,cAAzD;AAAwE,wBAAa;AAArF;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,CAAC,EAAC;AAHJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAcGO,OAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAmBA,QAAMD,YAAY,GAAG,MAAM;AACzB,wBACE;AAAQ,MAAA,SAAS,EAAG,gEAA+DN,SAAU,EAA7F;AAAgG,MAAA,OAAO,EAAEF,OAAzG;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAOA,sBAAO;AAAA,cAAGG;AAAH,mBAAP;AACD,CAxCM;;GAAML,iB;;KAAAA,iB","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const TransactionButton = ({ onClick, label, className, state }) => {\n  const [rendered, setRendered] = useState();\n  useEffect(() => {\n    if (!state || state.status === 'None') return;\n    if (state.status === 'PendingSignature') setRendered(loadingBtn('Pending'));\n    else if (state.status === 'Mining') setRendered(loadingBtn('Mining'));\n    else if (state.status === 'Success') setRendered(normalButton());\n  }, [state]);\n\n  useEffect(() => {\n    setRendered(normalButton());\n  }, []);\n\n  const loadingBtn = (content) => (\n    <button className={`bg-blue-500 text-white hover:bg-blue-300 rounded px-2 py-1.5 opacity-30 ${className}`} disabled>\n      <svg\n        class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n        <path\n          class=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        ></path>\n      </svg>\n      {content}\n    </button>\n  );\n\n  const normalButton = () => {\n    return (\n      <button className={`bg-blue-500 text-white hover:bg-blue-300 rounded px-2 py-1.5 ${className}`} onClick={onClick}>\n        {label}\n      </button>\n    );\n  };\n  return <>{rendered}</>;\n};\n"]},"metadata":{},"sourceType":"module"}