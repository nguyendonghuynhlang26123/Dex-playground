{"ast":null,"code":"import { useContext } from 'react';\nimport { MultiChainStatesContext, useNetwork } from '../providers';\nexport function useChainState() {\n  let queryParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _a;\n\n  const multiChainState = useContext(MultiChainStatesContext);\n  const {\n    network\n  } = useNetwork();\n  const chainId = (_a = queryParams.chainId) !== null && _a !== void 0 ? _a : network.chainId;\n\n  if (chainId === undefined) {\n    return undefined;\n  }\n\n  return Object.assign(Object.assign({}, multiChainState.chains[chainId]), {\n    dispatchCalls: multiChainState.dispatchCalls\n  });\n}","map":{"version":3,"sources":["../../../../src/hooks/useChainState.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,OAA3B;AAEA,SAAiB,uBAAjB,EAA4D,UAA5D,QAA8E,cAA9E;AAEA,OAAM,SAAU,aAAV,GACyB;AAAA,MAA7B,WAA6B,uEAAF,EAAE;;;;AAE7B,QAAM,eAAe,GAAG,UAAU,CAAC,uBAAD,CAAlC;AAEA,QAAM;AAAE,IAAA;AAAF,MAAc,UAAU,EAA9B;AACA,QAAM,OAAO,GAAG,CAAA,EAAA,GAAA,WAAW,CAAC,OAAZ,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,EAAnB,GAAuB,OAAO,CAAC,OAA/C;;AAEA,MAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,WAAO,SAAP;AACD;;AAED,SAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,eAAe,CAAC,MAAhB,CAAuB,OAAvB,CADL,CAAA,EACoC;AAClC,IAAA,aAAa,EAAE,eAAe,CAAC;AADG,GADpC,CAAA;AAID","sourceRoot":"","sourcesContent":["import { useContext } from 'react';\nimport { MultiChainStatesContext, useNetwork } from '../providers';\nexport function useChainState(queryParams = {}) {\n    var _a;\n    const multiChainState = useContext(MultiChainStatesContext);\n    const { network } = useNetwork();\n    const chainId = (_a = queryParams.chainId) !== null && _a !== void 0 ? _a : network.chainId;\n    if (chainId === undefined) {\n        return undefined;\n    }\n    return Object.assign(Object.assign({}, multiChainState.chains[chainId]), { dispatchCalls: multiChainState.dispatchCalls });\n}\n//# sourceMappingURL=useChainState.js.map"]},"metadata":{},"sourceType":"module"}