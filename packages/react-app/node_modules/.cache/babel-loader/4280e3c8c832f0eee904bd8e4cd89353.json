{"ast":null,"code":"var _jsxFileName = \"/mnt/STUDY/HOC/Thesis/playground/dex/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { Contract } from '@ethersproject/contracts';\nimport { shortenAddress, useCall, useEthers, useLookupAddress } from '@usedapp/core';\nimport React, { useEffect, useState } from 'react';\nimport { Body, Button, Container, Header, Image, Link } from './components';\nimport logo from './ethereumLogo.png';\nimport { MAINNET_ID, addresses, abis } from '@uniswap-v2-app/contracts';\nimport GET_AGGREGATED_UNISWAP_DATA from './graphql/subgraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WalletButton() {\n  _s();\n\n  const [rendered, setRendered] = useState('');\n  const ens = useLookupAddress();\n  const {\n    account,\n    activateBrowserWallet,\n    deactivate,\n    error\n  } = useEthers();\n  useEffect(() => {\n    if (ens) {\n      setRendered(ens);\n    } else if (account) {\n      setRendered(shortenAddress(account));\n    } else {\n      setRendered('');\n    }\n  }, [account, ens, setRendered]);\n  useEffect(() => {\n    if (error) {\n      console.error('Error while connecting wallet:', error.message);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"bg-blue-500\",\n    onClick: () => {\n      if (!account) {\n        activateBrowserWallet();\n      } else {\n        deactivate();\n      }\n    },\n    children: [rendered === '' && 'Connect Wallet', rendered !== '' && rendered]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WalletButton, \"rHPm32Ums1lNcs0Y2U4L/wqP/tg=\", false, function () {\n  return [useLookupAddress, useEthers];\n});\n\n_c = WalletButton;\n\nfunction App() {\n  // Read more about useDapp on https://usedapp.io/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WalletButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WalletButton\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/mnt/STUDY/HOC/Thesis/playground/dex/packages/react-app/src/App.jsx"],"names":["useQuery","Contract","shortenAddress","useCall","useEthers","useLookupAddress","React","useEffect","useState","Body","Button","Container","Header","Image","Link","logo","MAINNET_ID","addresses","abis","GET_AGGREGATED_UNISWAP_DATA","WalletButton","rendered","setRendered","ens","account","activateBrowserWallet","deactivate","error","console","message","App"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,SAAlC,EAA6CC,gBAA7C,QAAqE,eAArE;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,cAA7D;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,QAA4C,2BAA5C;AACA,OAAOC,2BAAP,MAAwC,oBAAxC;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMe,GAAG,GAAGlB,gBAAgB,EAA5B;AACA,QAAM;AAAEmB,IAAAA,OAAF;AAAWC,IAAAA,qBAAX;AAAkCC,IAAAA,UAAlC;AAA8CC,IAAAA;AAA9C,MAAwDvB,SAAS,EAAvE;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,GAAJ,EAAS;AACPD,MAAAA,WAAW,CAACC,GAAD,CAAX;AACD,KAFD,MAEO,IAAIC,OAAJ,EAAa;AAClBF,MAAAA,WAAW,CAACpB,cAAc,CAACsB,OAAD,CAAf,CAAX;AACD,KAFM,MAEA;AACLF,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GARQ,EAQN,CAACE,OAAD,EAAUD,GAAV,EAAeD,WAAf,CARM,CAAT;AAUAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,KAAJ,EAAW;AACTC,MAAAA,OAAO,CAACD,KAAR,CAAc,gCAAd,EAAgDA,KAAK,CAACE,OAAtD;AACD;AACF,GAJQ,EAIN,CAACF,KAAD,CAJM,CAAT;AAMA,sBACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAI,CAACH,OAAL,EAAc;AACZC,QAAAA,qBAAqB;AACtB,OAFD,MAEO;AACLC,QAAAA,UAAU;AACX;AACF,KARH;AAAA,eAUGL,QAAQ,KAAK,EAAb,IAAmB,gBAVtB,EAWGA,QAAQ,KAAK,EAAb,IAAmBA,QAXtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GArCQD,Y;UAGKf,gB,EACkDD,S;;;KAJvDgB,Y;;AAuCT,SAASU,GAAT,GAAe;AACb;AAEA,sBACE;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MARQA,G;AAUT,eAAeA,GAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Contract } from '@ethersproject/contracts';\nimport { shortenAddress, useCall, useEthers, useLookupAddress } from '@usedapp/core';\nimport React, { useEffect, useState } from 'react';\n\nimport { Body, Button, Container, Header, Image, Link } from './components';\nimport logo from './ethereumLogo.png';\n\nimport { MAINNET_ID, addresses, abis } from '@uniswap-v2-app/contracts';\nimport GET_AGGREGATED_UNISWAP_DATA from './graphql/subgraph';\n\nfunction WalletButton() {\n  const [rendered, setRendered] = useState('');\n\n  const ens = useLookupAddress();\n  const { account, activateBrowserWallet, deactivate, error } = useEthers();\n\n  useEffect(() => {\n    if (ens) {\n      setRendered(ens);\n    } else if (account) {\n      setRendered(shortenAddress(account));\n    } else {\n      setRendered('');\n    }\n  }, [account, ens, setRendered]);\n\n  useEffect(() => {\n    if (error) {\n      console.error('Error while connecting wallet:', error.message);\n    }\n  }, [error]);\n\n  return (\n    <button\n      className=\"bg-blue-500\"\n      onClick={() => {\n        if (!account) {\n          activateBrowserWallet();\n        } else {\n          deactivate();\n        }\n      }}\n    >\n      {rendered === '' && 'Connect Wallet'}\n      {rendered !== '' && rendered}\n    </button>\n  );\n}\n\nfunction App() {\n  // Read more about useDapp on https://usedapp.io/\n\n  return (\n    <div>\n      <WalletButton />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}