{"ast":null,"code":"import { MultiCallABI } from '../constants';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useMulticallAddress } from './useMulticallAddress';\nimport { useNetwork } from '../providers';\nimport { useRawCall } from './useRawCalls';\nconst GET_CURRENT_BLOCK_TIMESTAMP_CALL = MultiCallABI.encodeFunctionData('getCurrentBlockTimestamp', []);\nconst GET_CURRENT_BLOCK_DIFFICULTY_CALL = MultiCallABI.encodeFunctionData('getCurrentBlockDifficulty', []);\n/**\n * Queries block metadata.\n * @public\n */\n\nexport function useBlockMeta() {\n  let queryParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _a;\n\n  const {\n    network\n  } = useNetwork();\n  const chainId = (_a = queryParams.chainId) !== null && _a !== void 0 ? _a : network.chainId;\n  const address = useMulticallAddress(queryParams);\n  const timestamp = useRawCall(address && chainId !== undefined && {\n    address,\n    data: GET_CURRENT_BLOCK_TIMESTAMP_CALL,\n    chainId\n  });\n  const difficulty = useRawCall(address && chainId !== undefined && {\n    address,\n    data: GET_CURRENT_BLOCK_DIFFICULTY_CALL,\n    chainId\n  });\n  return {\n    timestamp: timestamp !== undefined ? new Date(BigNumber.from(timestamp.value).mul(1000).toNumber()) : undefined,\n    difficulty: difficulty !== undefined ? BigNumber.from(difficulty.value) : undefined\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/useBlockMeta.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,QAA6B,cAA7B;AACA,SAAS,SAAT,QAA0B,0BAA1B;AACA,SAAS,mBAAT,QAAoC,uBAApC;AAEA,SAAS,UAAT,QAA2B,cAA3B;AACA,SAAS,UAAT,QAA2B,eAA3B;AAEA,MAAM,gCAAgC,GAAG,YAAY,CAAC,kBAAb,CAAgC,0BAAhC,EAA4D,EAA5D,CAAzC;AACA,MAAM,iCAAiC,GAAG,YAAY,CAAC,kBAAb,CAAgC,2BAAhC,EAA6D,EAA7D,CAA1C;AAEA;;;AAGG;;AACH,OAAM,SAAU,YAAV,GAAoD;AAAA,MAA7B,WAA6B,uEAAF,EAAE;;;;AACxD,QAAM;AAAE,IAAA;AAAF,MAAc,UAAU,EAA9B;AACA,QAAM,OAAO,GAAG,CAAA,EAAA,GAAA,WAAW,CAAC,OAAZ,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,EAAnB,GAAuB,OAAO,CAAC,OAA/C;AAEA,QAAM,OAAO,GAAG,mBAAmB,CAAC,WAAD,CAAnC;AACA,QAAM,SAAS,GAAG,UAAU,CAC1B,OAAO,IAAI,OAAO,KAAK,SAAvB,IAAoC;AAAE,IAAA,OAAF;AAAW,IAAA,IAAI,EAAE,gCAAjB;AAAmD,IAAA;AAAnD,GADV,CAA5B;AAGA,QAAM,UAAU,GAAG,UAAU,CAC3B,OAAO,IAAI,OAAO,KAAK,SAAvB,IAAoC;AAAE,IAAA,OAAF;AAAW,IAAA,IAAI,EAAE,iCAAjB;AAAoD,IAAA;AAApD,GADT,CAA7B;AAIA,SAAO;AACL,IAAA,SAAS,EAAE,SAAS,KAAK,SAAd,GAA0B,IAAI,IAAJ,CAAS,SAAS,CAAC,IAAV,CAAe,SAAS,CAAC,KAAzB,EAAgC,GAAhC,CAAoC,IAApC,EAA0C,QAA1C,EAAT,CAA1B,GAA2F,SADjG;AAEL,IAAA,UAAU,EAAE,UAAU,KAAK,SAAf,GAA2B,SAAS,CAAC,IAAV,CAAe,UAAU,CAAC,KAA1B,CAA3B,GAA8D;AAFrE,GAAP;AAID","sourceRoot":"","sourcesContent":["import { MultiCallABI } from '../constants';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { useMulticallAddress } from './useMulticallAddress';\nimport { useNetwork } from '../providers';\nimport { useRawCall } from './useRawCalls';\nconst GET_CURRENT_BLOCK_TIMESTAMP_CALL = MultiCallABI.encodeFunctionData('getCurrentBlockTimestamp', []);\nconst GET_CURRENT_BLOCK_DIFFICULTY_CALL = MultiCallABI.encodeFunctionData('getCurrentBlockDifficulty', []);\n/**\n * Queries block metadata.\n * @public\n */\nexport function useBlockMeta(queryParams = {}) {\n    var _a;\n    const { network } = useNetwork();\n    const chainId = (_a = queryParams.chainId) !== null && _a !== void 0 ? _a : network.chainId;\n    const address = useMulticallAddress(queryParams);\n    const timestamp = useRawCall(address && chainId !== undefined && { address, data: GET_CURRENT_BLOCK_TIMESTAMP_CALL, chainId });\n    const difficulty = useRawCall(address && chainId !== undefined && { address, data: GET_CURRENT_BLOCK_DIFFICULTY_CALL, chainId });\n    return {\n        timestamp: timestamp !== undefined ? new Date(BigNumber.from(timestamp.value).mul(1000).toNumber()) : undefined,\n        difficulty: difficulty !== undefined ? BigNumber.from(difficulty.value) : undefined,\n    };\n}\n//# sourceMappingURL=useBlockMeta.js.map"]},"metadata":{},"sourceType":"module"}