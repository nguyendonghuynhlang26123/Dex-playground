{"ast":null,"code":"var _jsxFileName = \"/mnt/STUDY/HOC/Thesis/playground/dex/packages/react-app/src/components/Swap/index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { addresses } from '@dex/contracts';\nimport { useContractFunction, useToken } from '@usedapp/core';\nimport React, { useState } from 'react';\nimport { RiArrowUpDownLine } from 'react-icons/ri';\nimport { useLiquidityReserve } from '../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useTotalSupply = tokenAddress => {\n  _s();\n\n  var _useCall;\n\n  const {\n    value,\n    error\n  } = (_useCall = useCall(tokenAddress && {\n    contract: new Contract(tokenAddress, ERC20Interface),\n    method: 'totalSupply',\n    args: []\n  })) !== null && _useCall !== void 0 ? _useCall : {};\n\n  if (error) {\n    console.error(error.message);\n    return undefined;\n  }\n\n  return value === null || value === void 0 ? void 0 : value[0];\n};\n\n_s(useTotalSupply, \"O1/dri1quJgQ3w+3QCAa7O9sZ2w=\", true);\n\nexport const Swap = _ref => {\n  _s2();\n\n  let {\n    token1Address,\n    token2Address,\n    swapPosition\n  } = _ref;\n  const token1 = useToken(token1Address);\n  const token2 = useToken(token2Address);\n  const {\n    active,\n    r0,\n    r1\n  } = useLiquidityReserve(addresses[4].pair);\n  const {\n    state,\n    send\n  } = useContractFunction(contract, 'deposit', {\n    transactionName: 'Wrap'\n  });\n  return token1 && token2 ? /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"flex flex-col \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-[32px] text-center mt-6 mb-2 font-bold\",\n      children: \"SWAP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row space-x-2 my-2 \",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"w-24\",\n        children: [token1.symbol, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border border-gray-400 rounded flex-grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rounded-full border border-gray-300 hover:bg-gray-200 w-6 h-6 flex justify-center items-center mx-auto\",\n      onClick: swapPosition,\n      children: /*#__PURE__*/_jsxDEV(RiArrowUpDownLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row space-x-2 my-2 \",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"w-24\",\n        children: [token2.symbol, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border border-gray-400 rounded flex-grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 text-center\",\n      children: \"1 ETH = 20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"hover:bg-blue-200 hover:font-bold border border-blue-500 text-blue-500 rounded px-2 py-1 my-2 w-full\",\n      onClick: () => {},\n      children: \"Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Swap, \"qynKPR3/3TE5ABJEljlgvT7HDKU=\", false, function () {\n  return [useToken, useToken, useLiquidityReserve, useContractFunction];\n});\n\n_c = Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/mnt/STUDY/HOC/Thesis/playground/dex/packages/react-app/src/components/Swap/index.jsx"],"names":["useQuery","addresses","useContractFunction","useToken","React","useState","RiArrowUpDownLine","useLiquidityReserve","useTotalSupply","tokenAddress","value","error","useCall","contract","Contract","ERC20Interface","method","args","console","message","undefined","Swap","token1Address","token2Address","swapPosition","token1","token2","active","r0","r1","pair","state","send","transactionName","symbol"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { addresses } from '@dex/contracts';\nimport { useContractFunction, useToken } from '@usedapp/core';\nimport React, { useState } from 'react';\nimport { RiArrowUpDownLine } from 'react-icons/ri';\nimport { useLiquidityReserve } from '../../hooks';\n\nconst useTotalSupply = (tokenAddress) => {\n  const { value, error } =\n    useCall(\n      tokenAddress && {\n        contract: new Contract(tokenAddress, ERC20Interface),\n        method: 'totalSupply',\n        args: [],\n      }\n    ) ?? {};\n  if (error) {\n    console.error(error.message);\n    return undefined;\n  }\n  return value?.[0];\n};\n\nexport const Swap = ({ token1Address, token2Address, swapPosition }) => {\n  const token1 = useToken(token1Address);\n  const token2 = useToken(token2Address);\n  const { active, r0, r1 } = useLiquidityReserve(addresses[4].pair);\n  const { state, send } = useContractFunction(contract, 'deposit', { transactionName: 'Wrap' });\n\n  return token1 && token2 ? (\n    <form className=\"flex flex-col \">\n      <h1 className=\"text-[32px] text-center mt-6 mb-2 font-bold\">SWAP</h1>\n\n      <div className=\"flex flex-row space-x-2 my-2 \">\n        <label className=\"w-24\">{token1.symbol}: </label>\n        <input className=\"border border-gray-400 rounded flex-grow\" />\n      </div>\n      <button\n        className=\"rounded-full border border-gray-300 hover:bg-gray-200 w-6 h-6 flex justify-center items-center mx-auto\"\n        onClick={swapPosition}\n      >\n        <RiArrowUpDownLine />\n      </button>\n      <div className=\"flex flex-row space-x-2 my-2 \">\n        <label className=\"w-24\">{token2.symbol}: </label>\n        <input className=\"border border-gray-400 rounded flex-grow\" />\n      </div>\n      <p className=\"text-gray-600 text-center\">1 ETH = 20</p>\n      <button\n        className=\"hover:bg-blue-200 hover:font-bold border border-blue-500 text-blue-500 rounded px-2 py-1 my-2 w-full\"\n        onClick={() => {}}\n      >\n        Swap\n      </button>\n    </form>\n  ) : (\n    <p>Loading...</p>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}