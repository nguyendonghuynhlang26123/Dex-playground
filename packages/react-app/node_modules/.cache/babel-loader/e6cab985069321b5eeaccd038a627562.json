{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { abis } from '@dex/contracts';\nimport { useCall } from '@usedapp/core';\nimport React, { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { getContract } from '../common/utils';\nexport const useLiquidityReserve = address => {\n  _s();\n\n  var _useCall;\n\n  const {\n    error,\n    value: reserves\n  } = (_useCall = useCall({\n    contract: getContract(abis.pair, address),\n    method: 'getReserves',\n    args: []\n  })) !== null && _useCall !== void 0 ? _useCall : {};\n  useEffect(() => {\n    if (error) {\n      toast.error(error.message);\n    }\n  }, [error]);\n  return reserves ? {\n    error,\n    active: true,\n    r0: reserves[0],\n    r1: reserves[1],\n    timestamp: reserves[2]\n  } : {};\n};\n\n_s(useLiquidityReserve, \"vzbQCh127Ntr1+iL3/QxC3xvSgM=\", false, function () {\n  return [useCall];\n});","map":{"version":3,"sources":["/mnt/STUDY/HOC/Thesis/playground/dex/packages/react-app/src/hooks/useLiquidityReserve.jsx"],"names":["abis","useCall","React","useEffect","toast","getContract","useLiquidityReserve","address","error","value","reserves","contract","pair","method","args","message","active","r0","r1","timestamp"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,gBAArB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,OAAD,IAAa;AAAA;;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAK,EAAEC;AAAhB,kBACJT,OAAO,CAAC;AACNU,IAAAA,QAAQ,EAAEN,WAAW,CAACL,IAAI,CAACY,IAAN,EAAYL,OAAZ,CADf;AAENM,IAAAA,MAAM,EAAE,aAFF;AAGNC,IAAAA,IAAI,EAAE;AAHA,GAAD,CADH,+CAKE,EALR;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAJ,EAAW;AACTJ,MAAAA,KAAK,CAACI,KAAN,CAAYA,KAAK,CAACO,OAAlB;AACD;AACF,GAJQ,EAIN,CAACP,KAAD,CAJM,CAAT;AAMA,SAAOE,QAAQ,GACX;AACEF,IAAAA,KADF;AAEEQ,IAAAA,MAAM,EAAE,IAFV;AAGEC,IAAAA,EAAE,EAAEP,QAAQ,CAAC,CAAD,CAHd;AAIEQ,IAAAA,EAAE,EAAER,QAAQ,CAAC,CAAD,CAJd;AAKES,IAAAA,SAAS,EAAET,QAAQ,CAAC,CAAD;AALrB,GADW,GAQX,EARJ;AASD,CAvBM;;GAAMJ,mB;UAETL,O","sourcesContent":["import { abis } from '@dex/contracts';\nimport { useCall } from '@usedapp/core';\nimport React, { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { getContract } from '../common/utils';\n\nexport const useLiquidityReserve = (address) => {\n  const { error, value: reserves } =\n    useCall({\n      contract: getContract(abis.pair, address),\n      method: 'getReserves',\n      args: [],\n    }) ?? {};\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error.message);\n    }\n  }, [error]);\n\n  return reserves\n    ? {\n        error,\n        active: true,\n        r0: reserves[0],\n        r1: reserves[1],\n        timestamp: reserves[2],\n      }\n    : {};\n};\n"]},"metadata":{},"sourceType":"module"}