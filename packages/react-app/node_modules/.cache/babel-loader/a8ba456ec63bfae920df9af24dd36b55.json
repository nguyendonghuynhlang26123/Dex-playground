{"ast":null,"code":"import { notifyDevtools } from '../../devtools';\nexport function performMulticall(provider, multicallExecutor, multicallAddress, blockNumber, uniqueCalls, dispatchState, chainId, reportError) {\n  const start = Date.now();\n  multicallExecutor(provider, multicallAddress, blockNumber, uniqueCalls).then(state => {\n    dispatchState({\n      type: 'FETCH_SUCCESS',\n      blockNumber,\n      chainId,\n      state\n    });\n    notifyDevtools({\n      type: 'MULTICALL_SUCCESS',\n      duration: Date.now() - start,\n      chainId,\n      blockNumber,\n      multicallAddress,\n      state\n    });\n  }).catch(error => {\n    reportError(error);\n    dispatchState({\n      type: 'FETCH_ERROR',\n      blockNumber,\n      chainId,\n      error\n    });\n    notifyDevtools({\n      type: 'MULTICALL_ERROR',\n      duration: Date.now() - start,\n      chainId,\n      blockNumber,\n      multicallAddress,\n      calls: uniqueCalls,\n      error\n    });\n  });\n}","map":{"version":3,"sources":["../../../../../../src/providers/chainState/common/performMulticall.ts"],"names":[],"mappings":"AAKA,SAAS,cAAT,QAA+B,gBAA/B;AAEA,OAAM,SAAU,gBAAV,CACJ,QADI,EAEJ,iBAFI,EAQJ,gBARI,EASJ,WATI,EAUJ,WAVI,EAWJ,aAXI,EAYJ,OAZI,EAaJ,WAbI,EAa+B;AAEnC,QAAM,KAAK,GAAG,IAAI,CAAC,GAAL,EAAd;AACA,EAAA,iBAAiB,CAAC,QAAD,EAAW,gBAAX,EAA6B,WAA7B,EAA0C,WAA1C,CAAjB,CACG,IADH,CACS,KAAD,IAAU;AACd,IAAA,aAAa,CAAC;AAAE,MAAA,IAAI,EAAE,eAAR;AAAyB,MAAA,WAAzB;AAAsC,MAAA,OAAtC;AAA+C,MAAA;AAA/C,KAAD,CAAb;AACA,IAAA,cAAc,CAAC;AACb,MAAA,IAAI,EAAE,mBADO;AAEb,MAAA,QAAQ,EAAE,IAAI,CAAC,GAAL,KAAa,KAFV;AAGb,MAAA,OAHa;AAIb,MAAA,WAJa;AAKb,MAAA,gBALa;AAMb,MAAA;AANa,KAAD,CAAd;AAQD,GAXH,EAYG,KAZH,CAYU,KAAD,IAAU;AACf,IAAA,WAAW,CAAC,KAAD,CAAX;AACA,IAAA,aAAa,CAAC;AAAE,MAAA,IAAI,EAAE,aAAR;AAAuB,MAAA,WAAvB;AAAoC,MAAA,OAApC;AAA6C,MAAA;AAA7C,KAAD,CAAb;AACA,IAAA,cAAc,CAAC;AACb,MAAA,IAAI,EAAE,iBADO;AAEb,MAAA,QAAQ,EAAE,IAAI,CAAC,GAAL,KAAa,KAFV;AAGb,MAAA,OAHa;AAIb,MAAA,WAJa;AAKb,MAAA,gBALa;AAMb,MAAA,KAAK,EAAE,WANM;AAOb,MAAA;AAPa,KAAD,CAAd;AASD,GAxBH;AAyBD","sourceRoot":"","sourcesContent":["import { notifyDevtools } from '../../devtools';\nexport function performMulticall(provider, multicallExecutor, multicallAddress, blockNumber, uniqueCalls, dispatchState, chainId, reportError) {\n    const start = Date.now();\n    multicallExecutor(provider, multicallAddress, blockNumber, uniqueCalls)\n        .then((state) => {\n        dispatchState({ type: 'FETCH_SUCCESS', blockNumber, chainId, state });\n        notifyDevtools({\n            type: 'MULTICALL_SUCCESS',\n            duration: Date.now() - start,\n            chainId,\n            blockNumber,\n            multicallAddress,\n            state,\n        });\n    })\n        .catch((error) => {\n        reportError(error);\n        dispatchState({ type: 'FETCH_ERROR', blockNumber, chainId, error });\n        notifyDevtools({\n            type: 'MULTICALL_ERROR',\n            duration: Date.now() - start,\n            chainId,\n            blockNumber,\n            multicallAddress,\n            calls: uniqueCalls,\n            error,\n        });\n    });\n}\n//# sourceMappingURL=performMulticall.js.map"]},"metadata":{},"sourceType":"module"}