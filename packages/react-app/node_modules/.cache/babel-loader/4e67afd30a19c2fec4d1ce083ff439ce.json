{"ast":null,"code":"import { createContext, useContext } from 'react';\nimport { DEFAULT_CONFIG } from '../../model/config/default';\nimport { getChainById } from '../../helpers/chain';\nexport const ConfigContext = createContext({\n  config: DEFAULT_CONFIG,\n  updateConfig: () => undefined\n});\n\nconst validConfigs = configs => {\n  if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n    console.warn('No networks or supportedChain configured');\n  }\n\n  return configs;\n};\n/**\n * @public\n */\n\n\nexport function useConfig() {\n  var _a;\n\n  const {\n    config\n  } = useContext(ConfigContext); // backward compatible with supportedChains\n\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead');\n    const networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map(chainId => getChainById(chainId));\n    return validConfigs(Object.assign(Object.assign({}, config), {\n      networks\n    }));\n  }\n\n  return validConfigs(config);\n}\n/**\n * @public\n */\n\nexport function useUpdateConfig() {\n  const {\n    updateConfig\n  } = useContext(ConfigContext);\n  return updateConfig;\n}","map":{"version":3,"sources":["../../../../../src/providers/config/context.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,EAAwB,UAAxB,QAA0C,OAA1C;AAEA,SAAS,cAAT,QAA+B,4BAA/B;AACA,SAAS,YAAT,QAA6B,qBAA7B;AAEA,OAAO,MAAM,aAAa,GAAG,aAAa,CAAiE;AACzG,EAAA,MAAM,EAAE,cADiG;AAEzG,EAAA,YAAY,EAAE,MAAM;AAFqF,CAAjE,CAAnC;;AAKP,MAAM,YAAY,GAAI,OAAD,IAA4D;AAC/E,MAAI,EAAC,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,QAAV,KAAsB,CAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,QAAT,CAAkB,MAAlB,MAA6B,CAAvD,EAA0D;AACxD,IAAA,OAAO,CAAC,IAAR,CAAa,0CAAb;AACD;;AACD,SAAO,OAAP;AACD,CALD;AAOA;;AAEG;;;AACH,OAAM,SAAU,SAAV,GAAmB;;;AACvB,QAAM;AAAE,IAAA;AAAF,MAAa,UAAU,CAAC,aAAD,CAA7B,CADuB,CAGvB;;AACA,MAAI,MAAM,CAAC,eAAX,EAA4B;AAC1B,IAAA,OAAO,CAAC,IAAR,CAAa,4DAAb;AACA,UAAM,QAAQ,GAAY,CAAA,EAAA,GAAA,MAAM,CAAC,eAAP,MAAsB,IAAtB,IAAsB,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsB,EAAA,CAAE,GAAF,CAAO,OAAD,IAAa,YAAY,CAAC,OAAD,CAA/B,CAAhD;AACA,WAAO,YAAY,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACd,MADc,CAAA,EACR;AACT,MAAA;AADS,KADQ,CAAA,CAAnB;AAID;;AAED,SAAO,YAAY,CAAC,MAAD,CAAnB;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,eAAV,GAAyB;AAC7B,QAAM;AAAE,IAAA;AAAF,MAAmB,UAAU,CAAC,aAAD,CAAnC;AACA,SAAO,YAAP;AACD","sourceRoot":"","sourcesContent":["import { createContext, useContext } from 'react';\nimport { DEFAULT_CONFIG } from '../../model/config/default';\nimport { getChainById } from '../../helpers/chain';\nexport const ConfigContext = createContext({\n    config: DEFAULT_CONFIG,\n    updateConfig: () => undefined,\n});\nconst validConfigs = (configs) => {\n    if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n        console.warn('No networks or supportedChain configured');\n    }\n    return configs;\n};\n/**\n * @public\n */\nexport function useConfig() {\n    var _a;\n    const { config } = useContext(ConfigContext);\n    // backward compatible with supportedChains\n    if (config.supportedChains) {\n        console.warn('supportedChain is deprecated, please pass networks instead');\n        const networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map((chainId) => getChainById(chainId));\n        return validConfigs(Object.assign(Object.assign({}, config), { networks }));\n    }\n    return validConfigs(config);\n}\n/**\n * @public\n */\nexport function useUpdateConfig() {\n    const { updateConfig } = useContext(ConfigContext);\n    return updateConfig;\n}\n//# sourceMappingURL=context.js.map"]},"metadata":{},"sourceType":"module"}